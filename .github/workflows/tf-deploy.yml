name: "Terraform Deployment"

on: 
  # push:
  #   branches: 
  #     - azure-migration
  # pull_request:
  #   branches:
  #     - azure-migration
  workflow_dispatch:

permissions:
  security-events: write
  contents: read
  actions: read

jobs:
  terraform-deploy:
    name: "Terraform Deployment"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./
      
    # outputs:
    #   tfplanExit: ${{ steps.tfplan.outputs.exitcode }}

    steps:

      # Checkout to Github Actions Runner
      - name: Action Runner Checkout
        uses: actions/checkout@v4

      # Install the lastest version of Terrarform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      # Store API Token
      - name: Config API Token
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }} 

      # Initialize the Working Environment
      - name: Terraform Init
        # uses: hashicorp/setup-terraform@v3
        run: terraform init

      # Validate all Terraform Files
      - name: Terraform Validate
        run: terraform validate

      # Checks formatting of all Terraform Files
      - name: Terraform Format
        run: terraform fmt -check
        continue-on-error: true

      # Check Proposed Changes
      - name: Terraform Plan
        uses: hashicorp/setup-terraform@v3
        continue-on-error: true
        with:
          tf_actions_subcommand: 'plan'
          args: '-out=tfplan'      

      # Apply Proposed Changes
      # - name: Terraform Apply
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     tf_actions_subcommand: 'apply'
      #     args: 'tfplan'

      # Destroy the Environment
      # - name: Terraform Destroy
      #   run: terraform destroy

      # Security Check of all Terraform Files
      - name: Terraform Checkov Security Check
        uses: bridgecrewio/checkov-action@master
        with: 
          framework: terraform
          output_format: sarif
          output_file_path: results.sarif

      # Upload Security Results to 
      - name: Upload Security Results
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          category: Terraform